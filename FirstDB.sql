BEGIN TRANSACTION;

CREATE TABLE USERS(
    userId SERIAL PRIMARY KEY,
    userUuid VARCHAR(150) UNIQUE NOT NULL,
    userName VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    profilePicture VARCHAR(255) NULL,
    createdAt TIMESTAMP NOT NULL,
    deleted BOOLEAN NOT NULL
);

CREATE TABLE BOARDS(
    boardId SERIAL PRIMARY KEY,
    boardUuid VARCHAR(150) UNIQUE NOT NULL,
    title VARCHAR(50) NOT NULL,
    ownerId INT NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL,
    deleted BOOLEAN NOT NULL,
    FOREIGN KEY (ownerId) REFERENCES USERS(userId)
);

CREATE TABLE LISTS(
    listId SERIAL PRIMARY KEY,
    listUuid VARCHAR(150) UNIQUE NOT NULL,
    title VARCHAR(50) NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL,
    deleted BOOLEAN NOT NULL
);

CREATE TABLE CARDS(
    cardId SERIAL PRIMARY KEY,
    cardUuid VARCHAR(150) UNIQUE NOT NULL,
    title VARCHAR(50) NOT NULL,
    content TEXT NULL,
    startDate TEXT NULL,
    dueDate DATE NULL
);

CREATE TABLE LISTCARD(
    listCardId SERIAL PRIMARY KEY,
    listId INT NOT NULL,
    cardId INT NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL,
    FOREIGN KEY (listId) REFERENCES LISTS(listId),
    FOREIGN KEY (cardId) REFERENCES CARDS(cardId)
);

CREATE TABLE BOARDLIST(
    boardListId SERIAL PRIMARY KEY,
    boardId INT NOT NULL,
    listId INT NOT NULL,
    FOREIGN KEY (boardId) REFERENCES BOARDS(boardId),
    FOREIGN KEY (listId) REFERENCES LISTS(listId)
);

CREATE TABLE ROLES(
    roleId SERIAL PRIMARY KEY,
    roleDescription VARCHAR(20) NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL
);

CREATE TABLE BOARDSUSER(
    boardUserId SERIAL PRIMARY KEY,
    boardId INT NOT NULL,
    userId INT NOT NULL,
    roleId INT NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL,
    FOREIGN KEY (boardId) REFERENCES BOARDS(boardId),
    FOREIGN KEY (userId) REFERENCES USERS(userId),
    FOREIGN KEY (roleId) REFERENCES ROLES(roleId)
);

COMMIT;